# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

EnumMap:
    AggregationNode:
        Step: AggregationNodeStep

    ExchangeNode:
        Type: ExchangeNodeType
        Scope: ExchangeNodeScope

    LimitNode:
        Step: LimitNodeStep

    SelectedRole:
        Type: SelectedRoleType

    SampleNode:
        Type: SampleNodeType

ExtraFields:
    RowExpression:
      std::shared_ptr<SourceLocation>: sourceLocation

    Aggregation:
        FunctionHandle:      functionHandle
        List<RowExpression>: arguments

    PlanNode:
        PlanNodeId:          id

    RemoteTransactionHandle:
        Optional<String>:    dummy

AddToOutput:
    - NodeState

AbstractClasses:
    ColumnHandle:
      super: JsonEncodedSubclass
      comparable: true
      subclasses:
        - { name: HiveColumnHandle,         key: hive }
        - { name: IcebergColumnHandle,      key: hive-iceberg }
        - { name: TpchColumnHandle,         key: tpch }
        - { name: SystemColumnHandle,       key: $system@system }

    ConnectorPartitioningHandle:
      super: JsonEncodedSubclass
      subclasses:
        - { name: SystemPartitioningHandle, key: $remote }
        - { name: HivePartitioningHandle,   key: hive}
        - { name: TpchPartitioningHandle,   key: tpch}

    ConnectorTableHandle:
      super: JsonEncodedSubclass
      subclasses:
        - { name: HiveTableHandle,          key: hive }
        - { name: IcebergTableHandle,       key: hive-iceberg }
        - { name: TpchTableHandle,          key: tpch }
        - { name: SystemTableHandle,        key: $system@system }

    ConnectorOutputTableHandle:
      super: JsonEncodedSubclass
      subclasses:
        - { name: HiveOutputTableHandle,          key: hive }

    ConnectorInsertTableHandle:
      super: JsonEncodedSubclass
      subclasses:
        - { name: HiveInsertTableHandle,          key: hive }

    ConnectorTransactionHandle:
      super: JsonEncodedSubclass
      subclasses:
        - { name: HiveTransactionHandle,    key: hive }
        - { name: RemoteTransactionHandle,  key: $remote }
        - { name: SystemTransactionHandle,  key: $system@system }

    ConnectorTableLayoutHandle:
      super: JsonEncodedSubclass
      subclasses:
        - { name: HiveTableLayoutHandle,    key: hive }
        - { name: IcebergTableLayoutHandle, key: hive-iceberg }
        - { name: TpchTableLayoutHandle,    key: tpch }
        - { name: SystemTableLayoutHandle,  key: $system@system }

    ConnectorMetadataUpdateHandle:
      super: JsonEncodedSubclass
      subclasses:
        - { name: HiveMetadataUpdateHandle, key: hive}

    ConnectorSplit:
      super: JsonEncodedSubclass
      subclasses:
        - { name: HiveSplit,            key: hive }
        - { name: IcebergSplit,         key: hive-iceberg }
        - { name: TpchSplit,            key: tpch }
        - { name: RemoteSplit,          key: $remote }
        - { name: EmptySplit,           key: $empty }
        - { name: SystemSplit,          key: $system@system }

    ConnectorHistogram:
      super: JsonEncodedSubclass
      subclasses:
        - { name: UniformDistributionHistogram, key: uniform-distribution}

    ExecutionWriterTarget:
      super: JsonEncodedSubclass
      subclasses:
        - { name: CreateHandle,            key: CreateHandle }
        - { name: InsertHandle,            key: InsertHandle }
        - { name: DeleteHandle,            key: DeleteHandle }

    PlanNode:
      super: JsonEncodedSubclass
      subclasses:
        - { name: AggregationNode,          key: .AggregationNode }
        - { name: GroupIdNode,              key: com.facebook.presto.sql.planner.plan.GroupIdNode }
        - { name: DistinctLimitNode,        key: .DistinctLimitNode }
        - { name: EnforceSingleRowNode,     key: com.facebook.presto.sql.planner.plan.EnforceSingleRowNode }
        - { name: ExchangeNode,             key: com.facebook.presto.sql.planner.plan.ExchangeNode }
        - { name: FilterNode,               key: .FilterNode }
        - { name: JoinNode,                 key: com.facebook.presto.sql.planner.plan.JoinNode }
        - { name: LimitNode,                key: .LimitNode }
        - { name: MarkDistinctNode,         key: .MarkDistinctNode }
        - { name: SortNode,                 key: .SortNode }
        - { name: OutputNode,               key: .OutputNode }
        - { name: ProjectNode,              key: .ProjectNode }
        - { name: RowNumberNode,            key: com.facebook.presto.sql.planner.plan.RowNumberNode }
        - { name: RemoteSourceNode,         key: com.facebook.presto.sql.planner.plan.RemoteSourceNode }
        - { name: SampleNode,               key: com.facebook.presto.sql.planner.plan.SampleNode }
        - { name: SemiJoinNode,             key: com.facebook.presto.sql.planner.plan.SemiJoinNode }
        - { name: TableScanNode,            key: .TableScanNode }
        - { name: TableWriterNode,          key: com.facebook.presto.sql.planner.plan.TableWriterNode }
        - { name: TableWriterMergeNode,     key: com.facebook.presto.sql.planner.plan.TableWriterMergeNode }
        - { name: TopNNode,                 key: .TopNNode }
        - { name: TopNRowNumberNode,        key: com.facebook.presto.sql.planner.plan.TopNRowNumberNode }
        - { name: UnnestNode,               key: com.facebook.presto.sql.planner.plan.UnnestNode }
        - { name: ValuesNode,               key: .ValuesNode }
        - { name: AssignUniqueId,           key: com.facebook.presto.sql.planner.plan.AssignUniqueId }
        - { name: MergeJoinNode,            key: com.facebook.presto.sql.planner.plan.MergeJoinNode }
        - { name: WindowNode,               key: com.facebook.presto.sql.planner.plan.WindowNode }

    RowExpression:
      super: JsonEncodedSubclass
      subclasses:
        - { name: CallExpression,             key: call }
        - { name: ConstantExpression,         key: constant }
        - { name: SpecialFormExpression,      key: special }
        - { name: LambdaDefinitionExpression, key: lambda }
        - { name: VariableReferenceExpression,key: variable }

    ValueSet:
      super: JsonEncodedSubclass
      subclasses:
        - { name: EquatableValueSet,          key: equatable }
        - { name: SortedRangeSet,             key: sortable }
        - { name: AllOrNoneValueSet,          key: allOrNone }

    FunctionHandle:
      super: JsonEncodedSubclass
      subclasses:
        - { name: BuiltInFunctionHandle,      key: $static }
        - { name: SqlFunctionHandle,          key: json_file }

JavaClasses:
  - presto-hive-metastore/src/main/java/com/facebook/presto/hive/BucketFunctionType.java
  - presto-hive-metastore/src/main/java/com/facebook/presto/hive/BucketFunctionType.java
  - presto-hive-common/src/main/java/com/facebook/presto/hive/BaseHiveColumnHandle.java
  - presto-hive-metastore/src/main/java/com/facebook/presto/hive/metastore/Column.java
  - presto-hive/src/main/java/com/facebook/presto/hive/DwrfEncryptionMetadata.java
  - presto-hive/src/main/java/com/facebook/presto/hive/EncryptionInformation.java
  - presto-hive/src/main/java/com/facebook/presto/hive/HiveBucketHandle.java
  - presto-hive-metastore/src/main/java/com/facebook/presto/hive/HiveBucketProperty.java
  - presto-hive-metastore/src/main/java/com/facebook/presto/hive/HiveBucketProperty.java
  - presto-hive-metastore/src/main/java/com/facebook/presto/hive/metastore/Table.java
  - presto-hive-metastore/src/main/java/com/facebook/presto/hive/metastore/PrestoTableType.java
  - presto-hive-metastore/src/main/java/com/facebook/presto/hive/LocationHandle.java
  - presto-hive/src/main/java/com/facebook/presto/hive/HiveCompressionCodec.java
  - presto-hive/src/main/java/com/facebook/presto/hive/HiveBucketing.java
  - presto-hive/src/main/java/com/facebook/presto/hive/HiveColumnHandle.java
  - presto-hive/src/main/java/com/facebook/presto/hive/HiveFileSplit.java
  - presto-hive/src/main/java/com/facebook/presto/hive/HiveInsertTableHandle.java
  - presto-hive/src/main/java/com/facebook/presto/hive/HiveOutputTableHandle.java
  - presto-hive/src/main/java/com/facebook/presto/hive/HivePartitionKey.java
  - presto-hive/src/main/java/com/facebook/presto/hive/HivePartitioningHandle.java
  - presto-hive/src/main/java/com/facebook/presto/hive/HiveSplit.java
  - presto-hive-metastore/src/main/java/com/facebook/presto/hive/HiveTableHandle.java
  - presto-hive/src/main/java/com/facebook/presto/hive/HiveTableLayoutHandle.java
  - presto-hive/src/main/java/com/facebook/presto/hive/HiveTransactionHandle.java
  - presto-hive-metastore/src/main/java/com/facebook/presto/hive/metastore/SortingColumn.java
  - presto-hive-metastore/src/main/java/com/facebook/presto/hive/metastore/Storage.java
  - presto-hive-metastore/src/main/java/com/facebook/presto/hive/metastore/StorageFormat.java
  - presto-hive/src/main/java/com/facebook/presto/hive/TableToPartitionMapping.java
  - presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadataUpdateHandle.java
  - presto-hive/src/main/java/com/facebook/presto/hive/HivePartitioningHandle.java